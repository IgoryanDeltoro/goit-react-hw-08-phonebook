{"version":3,"file":"static/js/790.201afe71.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/contactList/contactItems/ContactsItem.module.css?eab3","components/contactList/contactItems/ContactItems.jsx","general/colorGenerator.js","webpack://react-homework-template/./src/components/contactList/ContactList.module.css?7e3b","components/contactList/ContactList.jsx","webpack://react-homework-template/./src/components/form/form/Form.module.css?af1f","components/form/form/Form.jsx","components/filter/Filter.styled.js","components/filter/Filter.jsx","modal/ModalForm.styled.js","modal/ModalForm.jsx","components/form/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.phone.contacts.items;\nexport const selectIsLoading = state => state.phone.contacts.isLoading;\nexport const selectError = state => state.phone.contacts.error;\nexport const selectValueFilter = state => state.phone.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"tableRow\":\"ContactsItem_tableRow__DTQ4X\",\"tableText\":\"ContactsItem_tableText__JaMQo\",\"buttonBox\":\"ContactsItem_buttonBox__b7FWG\",\"button\":\"ContactsItem_button__VNxwZ\"};","import * as React from 'react';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PropTypes from 'prop-types';\nimport css from '../contactItems/ContactsItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contacts/operations';\nimport { nameCuter } from 'general/nameCuter';\nimport { randomHsl } from 'general/colorGenerator';\n\nconst ContactItems = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <tr className={css.tableRow}>\n      <td className={css.tableText}>\n        <ListItemAvatar>\n          <Avatar sx={{ bgcolor: randomHsl() }}>{nameCuter(name)}</Avatar>\n        </ListItemAvatar>\n        <ListItemText primary={name} />\n      </td>\n      <td>\n        <ListItemText primary={number} />\n      </td>\n      <td className={css.buttonBox}>\n        <IconButton\n          onClick={() => dispatch(deleteContactThunk(id))}\n          edge=\"end\"\n          aria-label=\"delete\"\n        >\n          <DeleteIcon />\n        </IconButton>\n      </td>\n    </tr>\n  );\n};\n\nContactItems.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactItems;\n","export const randomHsl = () => `hsla(${Math.random() * 360}, 100%, 50%, 1)`;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"ContactList_table__sqmfO\",\"loadingText\":\"ContactList_loadingText__GB148\",\"errorText\":\"ContactList_errorText__2WZ6w\"};","/* eslint-disable array-callback-return */\n\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectValueFilter,\n} from 'redux/contacts/selectors';\nimport { useSelector } from 'react-redux';\nimport ContactItems from './contactItems/ContactItems';\nimport css from '../contactList/ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectValueFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      {isLoading && <h2 className={css.loadingText}>Loading...</h2>}\n      {error && <h2 className={css.errorText}>{error}</h2>}\n      <table className={css.table}>\n        {contacts.length !== 0 && (\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th colSpan=\"2\">Phone Number</th>\n            </tr>\n          </thead>\n        )}\n        <tbody>\n          {contacts.map(({ id, name, number }) => {\n            const lowerCase = name.toLowerCase();\n            if (lowerCase.includes(filter)) {\n              return (\n                <ContactItems key={id} id={id} name={name} number={number} />\n              );\n            }\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__FEq2z\",\"label\":\"Form_label__XQ0-H\",\"input\":\"Form_input__gOsOC\",\"button\":\"Form_button__i0Obz\"};","import PropTypes from 'prop-types';\nimport css from '../form/Form.module.css';\nconst shortid = require('shortid');\n\nconst Form = ({ submit, change, name, number }) => {\n  const nameID = shortid.generate();\n  const numberID = shortid.generate();\n  return (\n    <form className={css.form} onSubmit={submit}>\n      <label className={css.label} htmlFor={nameID}>\n        Name\n      </label>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"name\"\n        id={nameID}\n        value={name}\n        onChange={change}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label className={css.label} htmlFor={numberID}>\n        Number\n      </label>\n      <input\n        className={css.input}\n        type=\"tel\"\n        name=\"number\"\n        id={numberID}\n        value={number}\n        onChange={change}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  submit: PropTypes.func.isRequired,\n  change: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\nexport default Form;\n","import { styled, alpha } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\n\nexport const Search = styled('div')(({ theme }) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.15),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.25),\n  },\n  marginRight: theme.spacing(2),\n  marginLeft: 0,\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    marginLeft: theme.spacing(3),\n    width: 'auto',\n  },\n}));\n\nexport const SearchIconWrapper = styled('div')(({ theme }) => ({\n  padding: theme.spacing(0, 2),\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nexport const StyledInputBase = styled(InputBase)(({ theme }) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    borderRadius: '20px',\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n}));\n","import { setValueFilter } from 'redux/contacts/contactsSplice';\nimport { useDispatch } from 'react-redux';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Search, SearchIconWrapper, StyledInputBase } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleOnchange = event => {\n    const value = event.target.value.toLowerCase().trim();\n    dispatch(setValueFilter(value));\n  };\n\n  return (\n    <Search>\n      <SearchIconWrapper>\n        <SearchIcon />\n      </SearchIconWrapper>\n      <StyledInputBase\n        placeholder=\"Search…\"\n        inputProps={{ 'aria-label': 'search' }}\n        onChange={handleOnchange}\n      />\n    </Search>\n  );\n};\n\nexport default Filter;\n","import { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport IconButton from '@mui/material/IconButton';\n\nexport const BtnTop = styled(Button)(({ theme }) => ({\n  display: 'block',\n  [theme.breakpoints.between('xs', 'sm')]: {\n    display: 'none',\n  },\n}));\n\nexport const ModalBox = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  width: '100%',\n  marginBottom: '25px',\n}));\n\nexport const Title = styled(Modal.Title)(({ theme }) => ({\n  [theme.breakpoints.between('xs', 'sm')]: {\n    marginRight: '50px',\n  },\n}));\n\nexport const BtnDown = styled(IconButton)(({ theme }) => ({\n  display: 'none',\n  [theme.breakpoints.between('xs', 'sm')]: {\n    display: 'flex',\n    position: 'absolute',\n    bottom: '25px',\n    right: '25px',\n    zIndex: '50',\n    width: '45px',\n    height: '45px',\n    backgroundColor: '#3e87e4',\n  },\n}));\n","import Modal from 'react-bootstrap/Modal';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Filter from 'components/filter/Filter';\nimport { BtnTop, BtnDown, ModalBox, Title } from './ModalForm.styled';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const ModalForm = ({ show, handleShow, handleClose, children }) => {\n  return (\n    <>\n      <ModalBox>\n        <Title>Contacts</Title>\n        <Filter />\n        <BtnTop\n          sx={{ borderRadius: 20 }}\n          variant=\"contained\"\n          onClick={handleShow}\n        >\n          Add contact\n        </BtnTop>\n        <BtnDown aria-label=\"upload picture\" size=\"large\" onClick={handleShow}>\n          <AddIcon sx={{ width: 50, height: 50, color: 'white' }} />\n        </BtnDown>\n      </ModalBox>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add contacts</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{children}</Modal.Body>\n      </Modal>\n    </>\n  );\n};\n","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport Form from './form/Form';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { createContactThunk } from 'redux/contacts/operations';\nimport { ModalForm } from 'modal/ModalForm';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const index = contacts.findIndex(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (index === -1) {\n      dispatch(createContactThunk({ name, number }));\n      reset();\n      return;\n    }\n    handleCoincidence(name);\n    reset();\n  };\n\n  const handleCoincidence = name => {\n    alert(`${name} is already in contacts`);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n    setShow(false);\n  };\n\n  return (\n    <ModalForm handleClose={handleClose} handleShow={handleShow} show={show}>\n      <Form\n        submit={handleSubmit}\n        change={handleChange}\n        name={name}\n        number={number}\n      />\n    </ModalForm>\n  );\n};\n\nexport default ContactForm;\n","import ContactList from 'components/contactList/ContactList';\nimport ContactForm from 'components/form/ContactForm';\nimport { useAuth } from 'hooks';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getContactsThunk } from 'redux/contacts/operations';\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const { token } = useAuth();\n\n  useEffect(() => {\n    token && dispatch(getContactsThunk());\n  }, [dispatch, token]);\n\n  return (\n    <div>\n      <ContactForm />\n      <ContactList />\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","phone","contacts","items","selectIsLoading","isLoading","selectError","error","selectValueFilter","filter","id","name","number","dispatch","useDispatch","className","css","ListItemAvatar","Avatar","sx","bgcolor","Math","random","nameCuter","ListItemText","primary","IconButton","onClick","deleteContactThunk","edge","Delete","useSelector","length","colSpan","map","toLowerCase","includes","shortid","require","submit","change","nameID","generate","numberID","onSubmit","htmlFor","type","value","onChange","pattern","title","required","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","placeholder","inputProps","event","target","trim","setValueFilter","BtnTop","Button","between","ModalBox","marginBottom","Title","Modal","BtnDown","bottom","right","zIndex","ModalForm","show","handleShow","handleClose","children","variant","size","Add","onHide","closeButton","useState","setName","setNumber","setShow","handleCoincidence","alert","reset","preventDefault","findIndex","contact","createContactThunk","token","useAuth","useEffect","getContactsThunk"],"sourceRoot":""}